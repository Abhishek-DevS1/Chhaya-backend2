pipeline {
    agent any 

    environment {
        WORKSPACE_DIR = "/home/abhishek/CICDpro/Chhaya-backend"
    }

    stages {
        stage('Create Workspace') {
            steps {
                script {
                    if (!fileExists(env.WORKSPACE_DIR)) {
                        sh "mkdir -p ${env.WORKSPACE_DIR}"
                    }
                }
            }
        }

        stage('Cleanup Workspace') {
            steps {
                script {
                    def cleanupResult = sh(script: 'rm -rf .git', returnStatus: true)
                    if (cleanupResult != 0) {
                        error "Failed to clean up .git directory."
                    }

                    cleanupResult = sh(script: 'rm -rf *', returnStatus: true)
                    if (cleanupResult != 0) {
                        error "Failed to clean up workspace."
                    }
                }
            }
        }

        stage('Checkout') {
            steps {
                checkout([$class: 'GitSCM', 
                          branches: [[name: '*/master']], 
                          doGenerateSubmoduleConfigurations: false, 
                          extensions: [], 
                          userRemoteConfigs: [[url: 'https://github.com/Abhishek-DevS1/Chhaya-backend2.git', 
                                                credentialsId: 'backend']]])
            }
        }

        stage('Setup Virtual Environment, Install Dependencies') {
            steps {
                script {
                    def venvDir = "${env.WORKSPACE_DIR}/venv"
                    if (!fileExists(venvDir)) {
                        sh '''
                        chmod +x scripts/setup_virtualenv.sh
                        ./scripts/setup_virtualenv.sh
                        '''
                    } else {
                        echo "Virtual environment already exists, skipping setup."
                    }
                }
            }
        }

        stage('Migration') {
            steps {
                sh '''
                chmod +x scripts/run_migration.sh
                ./scripts/run_migration.sh
                '''
            }
        }

        stage('Setup Gunicorn') {
            steps {
                sh '''
                chmod +x scripts/gunicorn.sh
                ./scripts/gunicorn.sh
                '''
            }
        }
    }

    post {
        always {
            echo "Cleaning up..."
            sh 'rm -rf ${env.WORKSPACE_DIR}/venv || true'
        }

        success {
            echo "Pipeline completed successfully!"
        }

        failure {
            echo "Pipeline failed. Please check the logs."
        }
    }
}
